name: mongo-sharding

services:
  configSrv01:
    image: mongo:latest
    container_name: configSrv01
    restart: always
    ports:
     - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - configSrv01-data:/data/db
    command: --configsvr --replSet --configReplSet --bind_ip_all

    # configSrv02:
    # image: mongo:latest
    # container_name: configSrv02
    # ports:
    #  - "27020:27020"
    # networks:
    #   app-network:
    #     ipv4_address: 173.17.0.11
    # volumes:
    #   - configSrv02-data:/data/db
    # command: --configsvr --replSet --configReplSet --bind_ip_all  
       
    # healthcheck:
    #   test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
    #   interval: 5s
    #   start_period: 10s //**

  shard01:
    image: mongo:latest
    container_name: shard01
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard01-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard01", 
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
 
  shard02:
    image: mongo:latest
    container_name: shard02
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard02-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard02", 
        "--bind_ip_all", 
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  router:
    image: mongo:latest
    container_name: router
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb", 
        "--configReplSet/configSrv01:27019",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://router:27018"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:
        ipv4_address: 173.17.0.2


networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  configSrv01-data:
  # configSrv02-data:  
  shard01-data:
  shard02-data:
 


  

